
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
//apply plugin: 'eclipse'
//apply plugin: 'pmd'  //code inspect
//apply plugin: 'jacoco' //code coverage

mainClassName = "TTT.TTTWeb"

version = '1.0'

jar{
	destinationDir = file('jar')
	manifest{
		attributes ('Main-Class': "TTT.TTTConsole", 
			    'Implementation-Title': 'RESTAPIClientAutomation',
                            'Implementation-Version': version,
			    'Built-By': "McSoftware",
	            	    'Built-Date': new Date(),
        		    'Built-JDK': System.getProperty('java.version'),
	            	    )
	}
	from {
    		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  	}
}

task  guiJar (type: Jar) {
	destinationDir = file('jar')
	baseName = project.name + '-gui'
	manifest{
                attributes ('Main-Class': "TTT.TTTGui",
                            'Implementation-Title': 'RESTAPIClientAutomation',
                            'Implementation-Version': version,
                            'Built-By': "McSoftware",
                            'Built-Date': new Date(),
                            'Built-JDK': System.getProperty('java.version'),
                            )
        }
	from {
                configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
	with jar
}

/*task wrapper(type: Wrapper) {
	description = 'Install Gradle Wrapper'
	gradleVersion = '2.8'
}*/

sourceSets{
	main{
		java{
			srcDir 'src/TTT/'
		}
		resources{
			srcDir 'src/resources/'
		}
	}
	/*test{
		java{
			srcDir 'src/testTTT'
		}
	}*/
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    flatDir{
	dirs 'lib'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile files("${System.properties['java.home']}/../lib/tools.jar") //for windows installiation
    compile 'net.joningi:icndb-java-api:1.0'
    compile 'com.sparkjava:spark-core:2.3'
    compile 'com.googlecode.json-simple:json-simple:1.1'
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
//
